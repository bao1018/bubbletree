<script type="text/javascript">
	// $(function() {
	//
	// var $tooltip = $('<div class="tooltip">Tooltip</div>');
	// $('.bubbletree').append($tooltip);
	// $tooltip.hide();
	//
	// var tooltip = function(event) {
	// if (event.type == 'SHOW') {
	// // show tooltip
	// vis4.log(event);
	// $tooltip.css({
	// left : event.mousePos.x + 4,
	// top : event.mousePos.y + 4
	// });
	// $tooltip.html(event.node.label + ' <b>' + event.node.famount + '</b>');
	// var bubble = event.target;
	//
	// $tooltip.show();
	// } else {
	// // hide tooltip
	// $tooltip.hide();
	// }
	// };
	//
	// var dataLoaded = function(data) {
	// // console.log('dataLoaded', JSON.stringify(data));
	// window.bubbleTree = new BubbleTree({
	// data : data,
	//
	// container : '.bubbletree',
	// bubbleType : 'icon',
	// bubbleStyles : {
	// 'cofog-1' : BubbleTree.Styles.Cofog,
	// 'cofog-2' : BubbleTree.Styles.Cofog,
	// 'cofog-3' : BubbleTree.Styles.Cofog
	// },
	// rootPath : '../../',
	// sortBy : 'label',
	// tooltipCallback : tooltip
	// });
	// };
	//
	// // call openspending api for data
	// new OpenSpending.Aggregator({
	// apiUrl : 'http://openspending.org/api',
	// dataset : 'ukgov-finances-cra',
	// rootNodeLabel : 'Grant total',
	// drilldowns : ['cofog1', 'cofog2', 'cofog3'],
	// cuts : ['year:2008'],
	// breakdown : 'region',
	// // localApiCache: 'aggregate.json',
	// callback : dataLoaded
	// });
	//
	// });
	var dataVendor = function(node) {
		var max = 10;
		var sons = [];
		var ret = [];
		var param = 'amount='+node.amount;
		var xhReq = new XMLHttpRequest();
		
        xhReq.open("GET", "/home/getChildren?"+param, false);
        xhReq.setRequestHeader("Content-type", "application/json; charset=utf-8");

        xhReq.send(null);
        console.log("Load data from server...");
        ret = JSON.parse(xhReq.responseText);

		return ret;
	}
	var data = {
		label : "Root",
		amount : 5000000
	}
	data["children"] = dataVendor(data);
	
	// function generateChildren(node) {
	// var numChildren = 8;
	// node.children = [];
	// var amount = node.amount;
	// for (var i = 0; i < numChildren; i++) {
	// var child = {
	// label : 'Child #' + (i + 1),
	// amount : i + 1 < numChildren ? amount * Math.random() * .6 : amount
	// };
	// amount -= child.amount;
	// node.children.push(child);
	// }
	// }
	//
	// generateChildren(data);

	$(function() {
		tree = new BubbleTree({
			data : data,
			container : '.bubbletree',
			dataProvider : dataVendor
		});
		// setTimeout(tree.onResize, 1000);
	}); 
</script>

</head>
<body>

	<div class="bubbletree-wrapper">
		<div class="bubbletree" style="width:1204px;height:800px"></div>
	</div>
</body>
</html>
